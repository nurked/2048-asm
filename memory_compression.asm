%macro memtoreg 4
	mov al, [rsi + %4]
	shl rax, cl
	mov al, [rsi + %3]
	shl rax, cl
	mov al, [rsi + %2]
	shl rax, cl
	mov al, [rsi + %1]
%endmacro

%macro regtomem 4
	mov [rsi + %4], al
	shr rax, cl
	mov [rsi + %3], al
	shr rax, cl
	mov [rsi + %2], al
	shr rax, cl
	mov [rsi + %1], al
%endmacro




down:
	push 	rbp
	mov 	rbp, rsp
	sub 	rsp, 32

	memtoreg	0x0, 0x4, 0x8, 0xc
	call 	shift
	regtomem	0x0, 0x4, 0x8, 0xc

	
	memtoreg 	0x1, 0x5, 0x9, 0xd
 	call 	shift
	regtomem 	0x1, 0x5, 0x9, 0xd
	

	memtoreg 	0x2, 0x6, 0xa, 0xe
	call 	shift
	regtomem 	0x2, 0x6, 0xa, 0xe
	

	memtoreg 	0x3, 0x7, 0xb, 0xf
	call 	shift
	regtomem 	0x3, 0x7, 0xb, 0xf
	
	leave
	ret
	
up:
	push 	rbp
	mov 	rbp, rsp
	sub 	rsp, 32

	memtoreg	0xc, 0x8, 0x4, 0x0
	call 	shift
	regtomem	0xc, 0x8, 0x4, 0x0

	
	memtoreg 	0xd, 0x9, 0x5, 0x1
 	call 	shift
	regtomem 	0xd, 0x9, 0x5, 0x1
	

	memtoreg 	0xe, 0xa, 0x6, 0x2
	call 	shift
	regtomem 	0xe, 0xa, 0x6, 0x2
	

	memtoreg 	0xf, 0xb, 0x7, 0x3
	call 	shift
	regtomem 	0xf, 0xb, 0x7, 0x3

	leave
	ret


left:
	push 	rbp
	mov 	rbp, rsp
	sub 	rsp, 32

	memtoreg	0x3, 0x2, 0x1, 0x0
	call 	shift
	regtomem	0x3, 0x2, 0x1, 0x0

	
	memtoreg 	0x7, 0x6, 0x5, 0x4
 	call 	shift
	regtomem 	0x7, 0x6, 0x5, 0x4
	

	memtoreg 	0xb, 0xa, 0x9, 0x8
	call 	shift
	regtomem 	0xb, 0xa, 0x9, 0x8
	

	memtoreg 	0xf, 0xe, 0xd, 0xc
	call 	shift
	regtomem 	0xf, 0xe, 0xd, 0xc
	
	leave
	ret

right:
	push 	rbp
	mov 	rbp, rsp
	sub 	rsp, 32

	memtoreg	0x0, 0x1, 0x2, 0x3
	call 	shift
	regtomem	0x0, 0x1, 0x2, 0x3

	
	memtoreg 	0x4, 0x5, 0x6, 0x7
 	call 	shift
	regtomem 	0x4, 0x5, 0x6, 0x7
	

	memtoreg 	0x8, 0x9, 0xa, 0xb
	call 	shift
	regtomem 	0x8, 0x9, 0xa, 0xb
	

	memtoreg 	0xc, 0xd, 0xe, 0xf
	call 	shift
	regtomem 	0xc, 0xd, 0xe, 0xf
	
	leave
	ret